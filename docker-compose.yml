version: "3.8"
services:
  backend:
    build: .
    container_name: backend
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - db
    environment:
      - DATABASE_HOST=db
      - MONGO_PORT=${MONGO_PORT}
      - DATABASE_NAME=${DATABASE_NAME}
      # - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      # - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  db:
    image: mongo
    container_name: db
    volumes:
      - mongo_data:/data/db
    # environment:
    #   - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
    #   - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    healthcheck:
      test: ["CMD", "nc", "-zv", "localhost", "27017"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=db
      # - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      # - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    depends_on:
      - db

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf

volumes:
  rabbitmq_data:
    driver: local
  mongo_data:
    driver: local
